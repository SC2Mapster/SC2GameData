//==================================================================================================
//  Terran Easy Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  Upgrades
//--------------------------------------------------------------------------------------------------
static void Upgrades (int player, int phase) {
    if (phase >= 2) {
        if (phase >= 3) {
            AISetStock( player, 1, c_TR_InfantryWeapons1 );
            AISetStock( player, 1, c_TR_InfantryArmor1 );
            if (phase >= 4) {
                AISetStock( player, 1, c_TR_SiegeTankSiege );
                AISetStock( player, 1, c_TR_VehicleWeapons1 );
                AISetStock( player, 1, c_TR_VehiclePlating1 );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  AirUpgrades
//--------------------------------------------------------------------------------------------------
static void AirUpgrades (int player, int phase) {
    if (phase >= 2) {
        if (phase >= 3) {
            AISetStock( player, 1, c_TR_ShipWeapons1 );
            AISetStock( player, 1, c_TR_ShipPlating1 );
            if (phase >= 4) {
                if (AITechCount(player, c_TB_MissileTurret, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_TR_MissileTurretRange );
                }
                if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_TR_RavenMissiles );
                }
                if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_TR_RavenTimed );
                }
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenGnd1
//--------------------------------------------------------------------------------------------------
void TerranOpenGnd1 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 9, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 11, c_TU_SCV );
    AISetStock( player, 1, c_TU_Marine );
    AISetStock( player, 1, c_TB_Refinery );

    // next attack should be around 4 units of about 375 resources after 450 seconds
    AISetStock( player, 2, c_TU_Marine );
    AISetStock( player, 2, c_TU_Marauder );
    // validation: 4 units above costing 350 average resources

    TerranTechUp(player, 1);
    Upgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 450, false, e_mainState_Mid1, e_mainSubState_GndA)) {
	    return;
    }

    // next attack should be around 6 units of about 750 resources after 380 seconds
    AIAddStringInt(player, c_TU_Marine, 3);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 3);
    // validation: 8 units above costing 710 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndA
//--------------------------------------------------------------------------------------------------
static void TerranMidGndA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 11, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 2, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStockUserData(player);

    TerranTechUp(player, 2);
    Upgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, false, 830, e_mainState_Mid1, e_mainSubState_GndB)) {
        return;
    }

    // next attack should be around 9 units of about 1125 resources after 330 seconds
    AIAddStringInt(player, c_TU_Marine, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    // validation: 12 units above costing 1096 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndB
//--------------------------------------------------------------------------------------------------
static void TerranMidGndB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 11, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 2, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStockUserData(player);

    TerranTechUp(player, 3);
    Upgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, false, 1160, e_mainState_Late1, e_mainSubState_GndA)) {
        return;
    }

    // next attack should be around 14 units of about 1700 resources after 280 seconds
    AIAddStringInt(player, c_TU_Marine, 7);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 3);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 1);
    // validation: 16 units above costing 1708 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 11, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 7000, 1000, c_expandDefault);

    AISetStockUserData(player);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 3, c_TU_Medivac );
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    Upgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1160, 280)) {
        return;
    }

    // next attack should be around 14 units of about 1700 resources after 280 seconds
    AIAddStringInt(player, c_TU_Marine, 6);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 1);
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 1);
    // validation: 13 units above costing 1735 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenAir1
//--------------------------------------------------------------------------------------------------
void TerranOpenAir1 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 9, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 11, c_TU_SCV );
    AISetStock( player, 1, c_TB_Refinery );
    AISetStock( player, 1, c_TB_Barracks );
    AISetStock( player, 1, c_TB_Factory );
    AISetStock( player, 1, c_TB_EngineeringBay );
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_MissileTurret );
    AISetStock( player, 1, c_TB_StarportTechLab );

    // next attack should be around 3 units of about 750 resources after 610 seconds
    AISetStock( player, 1, c_TU_Banshee );
    AISetStock( player, 2, c_TU_Viking_Alias );
    // validation: 3 units above costing 700 average resources

    TerranTechUp(player, 1);
    AirUpgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 610, false, e_mainState_Mid1, e_mainSubState_AirA)) {
	    return;
    }

    // next attack should be around 5 units of about 1125 resources after 380 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 1);
    AIAddStringInt(player, c_TU_Banshee, 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 1);
    // validation: 5 units above costing 1186 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirA
//--------------------------------------------------------------------------------------------------
static void TerranMidAirA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 11, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 2000, c_expandDefault);
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_StarportTechLab );

    AISetStockUserData(player);

    AISetStock( player, 3, c_TU_Medivac );

    TerranTechUp(player, 2);
    AirUpgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, false, 990, e_mainState_Mid1, e_mainSubState_AirB)) {
        return;
    }

    // next attack should be around 8 units of about 1675 resources after 330 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    AIAddStringInt(player, c_TU_Banshee, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    // validation: 7 units above costing 1661 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirB
//--------------------------------------------------------------------------------------------------
static void TerranMidAirB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 11, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 2000, c_expandDefault);
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_StarportTechLab );
    AISetStock( player, 3, c_TU_Medivac );

    AISetStockUserData(player);


    TerranTechUp(player, 3);
    AirUpgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, false, 1320, e_mainState_Late1, e_mainSubState_AirA)) {
        return;
    }

    // next attack should be around 12 units of about 2550 resources after 280 seconds
    AIAddStringInt(player, c_TU_Marine, 3);
    AIAddStringInt(player, c_TU_Viking_Alias, 3);
    AIAddStringInt(player, c_TU_Banshee, 3);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 4);
    // validation: 13 units above costing 2523 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    int roll;

    AIClearStock(player);
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 11, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 2000, c_expandDefault);
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_StarportTechLab );
    AISetStock( player, 3, c_TU_Medivac );

    AISetStockUserData(player);
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    AirUpgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1320, 280)) {
        return;
    }

    // next attack should be around 12 units of about 2550 resources after 280 seconds
    AIAddStringInt(player, c_TU_Marine, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 4);
    AIAddStringInt(player, c_TU_Battlecruiser, 2);
    // validation: 10 units above costing 2548 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMid1
//--------------------------------------------------------------------------------------------------
void TerranMid1 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { TerranMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { TerranMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { TerranMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { TerranMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranLate1
//--------------------------------------------------------------------------------------------------
void TerranLate1 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
