//==================================================================================================
//  Zerg Hard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  Upgrades
//--------------------------------------------------------------------------------------------------
static void Upgrades (int player, int phase) {
    AISetStock( player, 1, c_ZR_Burrow );
    AISetStock( player, 1, c_ZR_GroundCarapace1 );
    AISetStock( player, 1, c_ZR_MeleeAttacks1 );
    AISetStock( player, 1, c_ZR_MissileAttacks1 );
    if (phase >= 2) {
        AISetStock( player, 1, c_ZR_RoachUnderground );
        AISetStock( player, 1, c_ZR_RoachSpeed );
        if (AITechCount(player, c_ZU_Hydralisk, c_techCountInProgressOrBetter) >= 3) {
            AISetStock( player, 1, c_ZR_HydraliskRange );
        }
        AISetStock( player, 1, c_ZR_GroundCarapace2 );
        AISetStock( player, 1, c_ZR_MeleeAttacks2 );
        AISetStock( player, 1, c_ZR_MissileAttacks2 );
        AISetStock( player, 1, c_ZR_FlyerCarapace1 );
        AISetStock( player, 1, c_ZR_FlyerAttacks1 );
        if (phase >= 3) {
            if (AITechCount(player, c_ZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                AISetStock( player, 1, c_ZR_ZerglingSpeed );
            }
            if (AITechCount(player, c_ZU_Zergling, c_techCountInProgressOrBetter) >= 8) {
                AISetStock( player, 1, c_ZR_ZerglingHaste );
            }
            if (AITechCount(player, c_ZU_Ultralisk, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_ZR_UltraliskArmor );
            }
            AISetStock( player, 1, c_ZR_GroundCarapace3 );
            AISetStock( player, 1, c_ZR_MeleeAttacks3 );
            AISetStock( player, 1, c_ZR_MissileAttacks3 );
            AISetStock( player, 1, c_ZR_FlyerCarapace2 );
            AISetStock( player, 1, c_ZR_FlyerAttacks2 );
            if (phase >= 4) {
                AISetStock( player, 1, c_ZR_FlyerCarapace3 );
                AISetStock( player, 1, c_ZR_FlyerAttacks3 );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  AirUpgrades
//--------------------------------------------------------------------------------------------------
static void AirUpgrades (int player, int phase) {
    AISetStock( player, 1, c_ZR_FlyerCarapace1 );
    AISetStock( player, 1, c_ZR_FlyerAttacks1 );
    if (phase >= 2) {
        AISetStock( player, 1, c_ZR_HydraliskRange );
        AISetStock( player, 1, c_ZR_FlyerCarapace2 );
        AISetStock( player, 1, c_ZR_FlyerAttacks2 );
        if (phase >= 3) {
            AISetStock( player, 1, c_ZR_FlyerCarapace3 );
            AISetStock( player, 1, c_ZR_FlyerAttacks3 );
            if (phase >= 4) {
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenGnd3
//--------------------------------------------------------------------------------------------------
void ZergOpenGnd3 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStock( player, 10, c_ZU_Drone );
    AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms);
    AISetStock( player, 15, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_Extractor );

    // next attack should be around 10 units of about 925 resources after 390 seconds
    roll = RandomInt(1,3);
    if (roll <= 2) {
        AISetStock( player, 1, c_ZU_Zergling );
        AISetStock( player, 9, c_ZU_Roach );
        // validation: 10 units above costing 925 average resources
    }
    else if (roll <= 3) {
        AISetStock( player, 1, c_ZU_Zergling );
        AISetStock( player, 6, c_ZU_Hydralisk );
    }
    // validation: 7 units above costing 925 average resources

    ZergTechUp(player, 1);
    Upgrades(player, 1);

    if (AIEnableStockOpen(player, c_ZU_Drone, 390, false, e_mainState_Mid3, e_mainSubState_GndA)) {
	    return;
    }

    // next attack should be around 15 units of about 1850 resources after 300 seconds
    AIAddStringInt(player, c_ZU_Zergling, 3);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 7);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 7);
    // validation: 17 units above costing 1825 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  ZergMidGndA
//--------------------------------------------------------------------------------------------------
static void ZergMidGndA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord_Alias, c_ZU_Drone, 20, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 1, c_ZU_Overseer );
        AISetStock( player, 4, c_ZB_SporeCrawler );
    }
    AISetStock( player, 1, c_ZU_Queen );
    AISetStockUserData(player);

    ZergTechUp(player, 2);
    Upgrades(player, 2);

    if (AIEnableStockMidA(player, c_ZU_Drone, 4, false, 690, e_mainState_Mid3, e_mainSubState_GndB)) {
        return;
    }

    // next attack should be around 23 units of about 2775 resources after 270 seconds
    AIAddStringInt(player, c_ZU_Zergling, 7);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 6);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 6);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Infestor), 2);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Infestor), 3);
    // validation: 24 units above costing 2800 average resources
}

//--------------------------------------------------------------------------------------------------
//  ZergMidGndB
//--------------------------------------------------------------------------------------------------
static void ZergMidGndB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord_Alias, c_ZU_Drone, 20, c_stockAlways);
    AISetStock( player, 1, c_ZU_Overseer );
    AIDefaultExpansion(player, c_ZB_Hatchery_Alias, 9000, 2000, c_expandDefault);
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 2, c_ZB_EvolutionChamber );
    AISetStockUserData(player);

    ZergTechUp(player, 3);
    Upgrades(player, 3);

    if (AIEnableStockMidB(player, c_ZU_Drone, 4, false, 960, e_mainState_Late3, e_mainSubState_GndA)) {
        return;
    }

    // next attack should be around 35 units of about 4175 resources after 240 seconds
    AIAddStringInt(player, c_ZU_Zergling, 5);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 6);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 6);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Infestor), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Infestor), 4);
    AIAddStringInt(player, c_ZU_Corruptor, 1);
    AIAddStringInt(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 1);
    // validation: 27 units above costing 4200 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord_Alias, c_ZU_Drone, 26, c_stockAlways);
    AIDefaultExpansion(player, c_ZB_Hatchery_Alias, 9000, 2000, c_expandDefault);

    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 2, c_ZB_EvolutionChamber );
    AISetStockUserData(player);
    AISetStock( player, 1, c_ZU_Overseer );
    AISetStock( player, 1, c_ZR_OverseerSpeed );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AISetStock( player, 4, c_ZU_Overseer );
    AISetStock( player, 4, c_ZB_SporeCrawler );

    ZergTechUp(player, 4);
    Upgrades(player, 4);

    if (AIEnableStockLate(player, c_ZU_Drone, 4, 960, 240)) {
        return;
    }

    // next attack should be around 35 units of about 4175 resources after 240 seconds
    AIAddStringInt(player, c_ZU_Zergling, 3);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Roach, c_ZU_Hydralisk), 5);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Infestor), 2);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Infestor), 2);
    AIAddStringInt(player, c_ZU_Corruptor, 2);
    AIAddStringInt(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 1);
    AIAddStringInt(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 1);
    AIAddStringInt(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 1);
    AIAddStringInt(player, AIPickFrom2(c_ZU_BroodLord, c_ZU_Ultralisk), 1);
    // validation: 18 units above costing 4200 average resources
}

//--------------------------------------------------------------------------------------------------
//  ZergOpenAir3
//--------------------------------------------------------------------------------------------------
void ZergOpenAir3 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_ZB_Hatchery_Alias );
    AISetStockFarms( player, c_ZU_Overlord_Alias, c_stockNormalFarms );
    AISetStock( player, 10, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_SpawningPool );
    AISetStock( player, 1, c_ZB_Extractor );
    AISetStock( player, 14, c_ZU_Drone );
    AISetStock( player, 1, c_ZU_Queen );
    AISetStock( player, 16, c_ZU_Drone );
    AISetStock( player, 2, c_ZB_Extractor );
    AISetStock( player, 1, c_ZB_Lair );
    AISetStock( player, 20, c_ZU_Drone );
    AISetStock( player, 1, c_ZB_EvolutionChamber );
    AISetStock( player, 1, c_ZB_Spire );
    AISetStock( player, 1, c_ZR_OverseerSpeed );

    // next attack should be around 6 units of about 1500 resources after 550 seconds
    AISetStock( player, 8, c_ZU_Mutalisk );
    // validation: 8 units above costing 1600 average resources

    AISetStock( player, 1, c_ZU_Overseer );

    ZergTechUp(player, 1);
    AirUpgrades(player, 1);

    if (AIEnableStockOpen(player, c_ZU_Drone, 550, false, e_mainState_Mid3, e_mainSubState_AirA)) {
	    return;
    }

    // next attack should be around 10 units of about 2400 resources after 300 seconds
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 5);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 5);
    // validation: 14 units above costing 2450 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirA
//--------------------------------------------------------------------------------------------------
static void ZergMidAirA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord_Alias, c_ZU_Drone, 20, c_stockAlways);
    AISetStock( player, 1, c_ZU_Overseer );
    AISetStock( player, 1, c_ZR_OverseerSpeed );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AIDefaultExpansion(player, c_ZB_Hatchery_Alias, 8000, 3000, c_expandDefault);
    AISetStock( player, 1, c_ZU_Queen );

    AISetStockUserData(player);

    AISetStock( player, 4, c_ZU_Overseer );
    AISetStock( player, 4, c_ZB_SporeCrawler );

    ZergTechUp(player, 2);
    AirUpgrades(player, 2);

    if (AIEnableStockMidA(player, c_ZU_Drone, 4, false, 850, e_mainState_Mid3, e_mainSubState_AirB)) {
        return;
    }

    // next attack should be around 15 units of about 3900 resources after 270 seconds
    AIAddStringInt(player, c_ZU_Mutalisk, 5);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, c_ZU_Corruptor, 3);
    // validation: 20 units above costing 3850 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  ZergMidAirB
//--------------------------------------------------------------------------------------------------
static void ZergMidAirB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord_Alias, c_ZU_Drone, 20, c_stockAlways);
    AISetStock( player, 1, c_ZU_Overseer );
    AISetStock( player, 1, c_ZR_OverseerSpeed );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AIDefaultExpansion(player, c_ZB_Hatchery_Alias, 8000, 3000, c_expandDefault);
    AISetStock( player, 1, c_ZU_Queen );

    AISetStockUserData(player);

    AISetStock( player, 4, c_ZU_Overseer );
    AISetStock( player, 4, c_ZB_SporeCrawler );

    ZergTechUp(player, 3);
    AirUpgrades(player, 3);

    if (AIEnableStockMidB(player, c_ZU_Drone, 4, false, 1120, e_mainState_Late3, e_mainSubState_AirA)) {
        return;
    }

    // next attack should be around 25 units of about 6100 resources after 240 seconds
    AIAddStringInt(player, c_ZU_Mutalisk, 6);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 5);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 5);
    AIAddStringInt(player, c_ZU_Corruptor, 5);
    AIAddStringInt(player, c_ZU_BroodLord, 2);
    // validation: 27 units above costing 6000 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    int roll;

    AIClearStock(player);
    AIClearStock(player);

    AIDefaultEconomy(player, c_ZB_Hatchery_Alias, c_ZB_Extractor, c_ZU_Overlord_Alias, c_ZU_Drone, 26, c_stockAlways);
    AISetStock( player, 1, c_ZU_Overseer );
    AISetStock( player, 1, c_ZR_OverseerSpeed );
    AISetStock( player, 1, c_ZR_OverlordTransport );
    AIDefaultExpansion(player, c_ZB_Hatchery_Alias, 8000, 3000, c_expandDefault);
    AISetStock( player, 1, c_ZU_Queen );

    AISetStockUserData(player);
    AISetStock( player, 4, c_ZU_Overseer );
    AISetStock( player, 4, c_ZB_SporeCrawler );

    ZergTechUp(player, 4);
    AirUpgrades(player, 4);

    if (AIEnableStockLate(player, c_ZU_Drone, 4, 1120, 240)) {
        return;
    }

    // next attack should be around 25 units of about 6100 resources after 240 seconds
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, AIPickFrom2(c_ZU_Mutalisk, c_ZU_Hydralisk), 4);
    AIAddStringInt(player, c_ZU_Corruptor, 5);
    AIAddStringInt(player, c_ZU_BroodLord, 5);
    // validation: 22 units above costing 6100 average resources
}

//--------------------------------------------------------------------------------------------------
//  ZergMid3
//--------------------------------------------------------------------------------------------------
void ZergMid3 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { ZergMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { ZergMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { ZergMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { ZergMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  ZergLate3
//--------------------------------------------------------------------------------------------------
void ZergLate3 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
