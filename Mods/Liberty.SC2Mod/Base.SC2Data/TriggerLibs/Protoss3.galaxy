//==================================================================================================
//  Protoss Hard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  Upgrades
//--------------------------------------------------------------------------------------------------
static void Upgrades (int player, int phase) {
    AISetStock( player, 1, c_PR_WarpGateResearch );
    AISetStock( player, 1, c_PR_Shields1 );
    AISetStock( player, 1, c_PR_GroundWeapons1 );
    AISetStock( player, 1, c_PR_GroundArmor1 );
    if (phase >= 2) {
        if (AITechCount(player, c_PU_Zealot, c_techCountInProgressOrBetter) >= 6) {
            AISetStock( player, 1, c_PR_ZealotCharge );
        }
        if (AITechCount(player, c_PU_Stalker, c_techCountInProgressOrBetter) >= 6) {
            AISetStock( player, 1, c_PR_StalkerBlink );
        }
        AISetStock( player, 1, c_PR_WarpPrismSpeed );
        AISetStock( player, 1, c_PR_ObserverSpeed );
        AISetStock( player, 1, c_PR_Shields2 );
        AISetStock( player, 1, c_PR_GroundWeapons2 );
        AISetStock( player, 1, c_PR_GroundArmor2 );
        if (phase >= 3) {
            AISetStock( player, 1, c_PR_Shields3 );
            AISetStock( player, 1, c_PR_GroundWeapons3 );
            AISetStock( player, 1, c_PR_GroundArmor3 );
            AISetStock( player, 1, c_PR_AirArmor1 );
            AISetStock( player, 1, c_PR_AirWeapons1 );
            if (phase >= 4) {
                if (AITechCount(player, c_PU_Colossus, c_techCountInProgressOrBetter) >= 2) {
                    AISetStock( player, 1, c_PR_ColossusRange );
                }
                AISetStock( player, 1, c_PR_AirArmor2 );
                AISetStock( player, 1, c_PR_AirWeapons2 );
                AISetStock( player, 1, c_PR_AirArmor3 );
                AISetStock( player, 1, c_PR_AirWeapons3 );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  AirUpgrades
//--------------------------------------------------------------------------------------------------
static void AirUpgrades (int player, int phase) {
    if (phase >= 2) {
        AISetStock( player, 1, c_PR_AirArmor1 );
        AISetStock( player, 1, c_PR_AirWeapons1 );
        if (phase >= 3) {
            AISetStock( player, 1, c_PR_ObserverSpeed );
            AISetStock( player, 1, c_PR_WarpPrismSpeed );
            if (AITechCount(player, c_PU_VoidRay, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_PR_VoidRaySpeed );
            }
            if (AITechCount(player, c_PU_Carrier, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_PR_CarrierLaunch );
            }
            AISetStock( player, 1, c_PR_AirArmor2 );
            AISetStock( player, 1, c_PR_AirWeapons2 );
            if (phase >= 4) {
                if (AITechCount(player, c_PU_Stalker, c_techCountInProgressOrBetter) >= 6) {
                    AISetStock( player, 1, c_PR_StalkerBlink );
                }
                AISetStock( player, 1, c_PR_WarpGateResearch );
                AISetStock( player, 1, c_PR_AirArmor3 );
                AISetStock( player, 1, c_PR_AirWeapons3 );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  ProtossOpenGnd3
//--------------------------------------------------------------------------------------------------
void ProtossOpenGnd3 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_PB_Nexus );
    AISetStock( player, 9, c_PU_Probe );
    AISetStockFarms( player, c_PB_Pylon, c_stockNormalFarms);
    AISetStock( player, 12, c_PU_Probe );
    AISetStock( player, 2, c_PB_Gateway );
    AISetStock( player, 20, c_PU_Probe );
    AISetStock( player, 1, c_PB_Assimilator );

    // next attack should be around 10 units of about 925 resources after 390 seconds
    AISetStock( player, 6, c_PU_Zealot );
    AISetStock( player, 2, c_PU_Stalker );
    // validation: 8 units above costing 950 average resources

    ProtossTechUp(player, 1);
    Upgrades(player, 1);

    if (AIEnableStockOpen(player, c_PU_Probe, 390, false, e_mainState_Mid3, e_mainSubState_GndA)) {
	    return;
    }

    // next attack should be around 15 units of about 1850 resources after 300 seconds
    AIAddStringInt(player, c_PU_Zealot, 6);
    AIAddStringInt(player, AIPickFrom2(c_PU_Sentry, c_PU_Stalker), 4);
    AIAddStringInt(player, AIPickFrom2(c_PU_Sentry, c_PU_Stalker), 4);
    // validation: 14 units above costing 1896 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  ProtossMidGndA
//--------------------------------------------------------------------------------------------------
static void ProtossMidGndA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_PB_Nexus, c_PB_Assimilator, c_PB_Pylon, c_PU_Probe, 20, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 4, c_PB_PhotonCannon );
        AISetStock( player, 1, c_PU_Observer );
    }
    AISetStock( player, 2, c_PB_Gateway );
    AISetStockUserData(player);

    ProtossTechUp(player, 2);
    Upgrades(player, 2);

    if (AIEnableStockMidA(player, c_PU_Probe, 4, false, 690, e_mainState_Mid3, e_mainSubState_GndB)) {
        return;
    }

    // next attack should be around 23 units of about 2775 resources after 270 seconds
    AIAddStringInt(player, c_PU_Zealot, 7);
    AIAddStringInt(player, c_PU_Stalker, 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Sentry, c_PU_Stalker), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_VoidRay, c_PU_Immortal), 3);
    // validation: 16 units above costing 2761 average resources
}

//--------------------------------------------------------------------------------------------------
//  ProtossMidGndB
//--------------------------------------------------------------------------------------------------
static void ProtossMidGndB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_PB_Nexus, c_PB_Assimilator, c_PB_Pylon, c_PU_Probe, 20, c_stockAlways);
    AISetStock( player, 1, c_PU_Observer );
    AIDefaultExpansion(player, c_PB_Nexus, 9000, 2000, c_expandDefault);
    AISetStock( player, 3, c_PB_Gateway );
    AISetStockUserData(player);

    ProtossTechUp(player, 3);
    Upgrades(player, 3);

    if (AIEnableStockMidB(player, c_PU_Probe, 4, false, 960, e_mainState_Late3, e_mainSubState_GndA)) {
        return;
    }

    // next attack should be around 35 units of about 4175 resources after 240 seconds
    AIAddStringInt(player, c_PU_Zealot, 9);
    AIAddStringInt(player, c_PU_Stalker, 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Sentry, c_PU_Stalker), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_VoidRay, c_PU_Immortal), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Phoenix, c_PU_Stalker), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Colossus, c_PU_Carrier), 1);
    // validation: 22 units above costing 4147 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_PB_Nexus, c_PB_Assimilator, c_PB_Pylon, c_PU_Probe, 26, c_stockAlways);
    AIDefaultExpansion(player, c_PB_Nexus, 9000, 2000, c_expandDefault);

    AISetStock( player, 4, c_PB_Gateway );
    AISetStockUserData(player);
    AISetStock( player, 1, c_PU_Observer );
    AISetStock( player, 4, c_PU_WarpPrism );
    AISetStock( player, 4, c_PU_Observer );
    AISetStock( player, 4, c_PB_PhotonCannon );

    ProtossTechUp(player, 4);
    Upgrades(player, 4);

    if (AIEnableStockLate(player, c_PU_Probe, 4, 960, 240)) {
        return;
    }

    // next attack should be around 35 units of about 4175 resources after 240 seconds
    AIAddStringInt(player, c_PU_Zealot, 4);
    AIAddStringInt(player, c_PU_Stalker, 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Sentry, c_PU_Stalker), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_VoidRay, c_PU_Immortal), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Phoenix, c_PU_Stalker), 3);
    AIAddStringInt(player, AIPickFrom2(c_PU_Colossus, c_PU_Carrier), 2);
    // validation: 18 units above costing 4197 average resources
}

//--------------------------------------------------------------------------------------------------
//  ProtossOpenAir3
//--------------------------------------------------------------------------------------------------
void ProtossOpenAir3 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_PB_Nexus );
    AISetStock( player, 9, c_PU_Probe );
    AISetStockFarms( player, c_PB_Pylon, c_stockNormalFarms);
    AISetStock( player, 11, c_PU_Probe );
    AISetStock( player, 1, c_PB_Assimilator );
    AISetStock( player, 15, c_PU_Probe );
    AISetStock( player, 1, c_PB_Gateway );
    AISetStock( player, 17, c_PU_Probe );
    AISetStock( player, 2, c_PB_Assimilator );
    AISetStock( player, 20, c_PU_Probe );
    AISetStock( player, 1, c_PB_CyberneticsCore );
    AISetStock( player, 2, c_PB_Stargate );

    // next attack should be around 6 units of about 1500 resources after 550 seconds
    AISetStock( player, 4, c_PU_VoidRay );
    // validation: 4 units above costing 1400 average resources

    AISetStock( player, 1, c_PU_Observer );

    ProtossTechUp(player, 1);
    AirUpgrades(player, 1);

    if (AIEnableStockOpen(player, c_PU_Probe, 550, false, e_mainState_Mid3, e_mainSubState_AirA)) {
	    return;
    }

    // next attack should be around 10 units of about 2400 resources after 300 seconds
    AIAddStringInt(player, c_PU_VoidRay, 5);
    AIAddStringInt(player, c_PU_Phoenix, 3);
    // validation: 8 units above costing 2500 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  ProtossMidAirA
//--------------------------------------------------------------------------------------------------
static void ProtossMidAirA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_PB_Nexus, c_PB_Assimilator, c_PB_Pylon, c_PU_Probe, 20, c_stockAlways);
    AISetStock( player, 1, c_PU_Observer );
    AISetStock( player, 1, c_PU_WarpPrism );
    AIDefaultExpansion(player, c_PB_Nexus, 8000, 3000, c_expandDefault);
    AISetStock( player, 2, c_PB_Stargate );

    AISetStockUserData(player);

    AISetStock( player, 4, c_PU_WarpPrism );
    AISetStock( player, 4, c_PU_Observer );
    AISetStock( player, 4, c_PB_PhotonCannon );

    ProtossTechUp(player, 2);
    AirUpgrades(player, 2);

    if (AIEnableStockMidA(player, c_PU_Probe, 4, false, 850, e_mainState_Mid3, e_mainSubState_AirB)) {
        return;
    }

    // next attack should be around 15 units of about 3900 resources after 270 seconds
    AIAddStringInt(player, c_PU_Stalker, 6);
    AIAddStringInt(player, c_PU_VoidRay, 6);
    AIAddStringInt(player, c_PU_Phoenix, 3);
    // validation: 15 units above costing 3900 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  ProtossMidAirB
//--------------------------------------------------------------------------------------------------
static void ProtossMidAirB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_PB_Nexus, c_PB_Assimilator, c_PB_Pylon, c_PU_Probe, 20, c_stockAlways);
    AISetStock( player, 1, c_PU_Observer );
    AISetStock( player, 1, c_PU_WarpPrism );
    AIDefaultExpansion(player, c_PB_Nexus, 8000, 3000, c_expandDefault);
    AISetStock( player, 3, c_PB_Stargate );
    AISetStock( player, 4, c_PU_WarpPrism );

    AISetStockUserData(player);

    AISetStock( player, 4, c_PU_Observer );
    AISetStock( player, 4, c_PB_PhotonCannon );

    ProtossTechUp(player, 3);
    AirUpgrades(player, 3);

    if (AIEnableStockMidB(player, c_PU_Probe, 4, false, 1120, e_mainState_Late3, e_mainSubState_AirA)) {
        return;
    }

    // next attack should be around 25 units of about 6100 resources after 240 seconds
    AIAddStringInt(player, c_PU_Stalker, 8);
    AIAddStringInt(player, c_PU_VoidRay, 8);
    AIAddStringInt(player, c_PU_Phoenix, 3);
    AIAddStringInt(player, c_PU_Carrier, 2);
    // validation: 21 units above costing 6150 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    int roll;

    AIClearStock(player);
    AIClearStock(player);

    AIDefaultEconomy(player, c_PB_Nexus, c_PB_Assimilator, c_PB_Pylon, c_PU_Probe, 26, c_stockAlways);
    AISetStock( player, 1, c_PU_Observer );
    AISetStock( player, 1, c_PU_WarpPrism );
    AIDefaultExpansion(player, c_PB_Nexus, 8000, 3000, c_expandDefault);
    AISetStock( player, 4, c_PB_Stargate );
    AISetStock( player, 4, c_PU_WarpPrism );

    AISetStockUserData(player);
    AISetStock( player, 4, c_PU_Observer );
    AISetStock( player, 4, c_PB_PhotonCannon );

    ProtossTechUp(player, 4);
    AirUpgrades(player, 4);

    if (AIEnableStockLate(player, c_PU_Probe, 4, 1120, 240)) {
        return;
    }

    // next attack should be around 25 units of about 6100 resources after 240 seconds
    AIAddStringInt(player, c_PU_VoidRay, 9);
    AIAddStringInt(player, c_PU_Phoenix, 5);
    AIAddStringInt(player, c_PU_Carrier, 3);
    // validation: 17 units above costing 6200 average resources
}

//--------------------------------------------------------------------------------------------------
//  ProtossMid3
//--------------------------------------------------------------------------------------------------
void ProtossMid3 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { ProtossMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { ProtossMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { ProtossMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { ProtossMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  ProtossLate3
//--------------------------------------------------------------------------------------------------
void ProtossLate3 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
