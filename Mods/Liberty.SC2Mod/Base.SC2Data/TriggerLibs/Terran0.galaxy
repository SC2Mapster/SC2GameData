//==================================================================================================
//  Terran VeryEasy Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  Upgrades
//--------------------------------------------------------------------------------------------------
static void Upgrades (int player, int phase) {
    if (phase >= 2) {
        if (phase >= 3) {
            if (phase >= 4) {
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  AirUpgrades
//--------------------------------------------------------------------------------------------------
static void AirUpgrades (int player, int phase) {
    if (phase >= 2) {
        if (phase >= 3) {
            if (phase >= 4) {
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenGnd0
//--------------------------------------------------------------------------------------------------
void TerranOpenGnd0 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 8, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 1, c_TB_Refinery );

    // next attack should be around 1 units of about 100 resources after 480 seconds
    AISetStock( player, 2, c_TU_Marine );
    // validation: 2 units above costing 100 average resources

    TerranTechUp(player, 1);
    Upgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 480, true, e_mainState_Mid0, e_mainSubState_GndA)) {
	    return;
    }

    // next attack should be around 2 units of about 200 resources after 420 seconds
    AIAddStringInt(player, c_TU_Marine, 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 1);
    // validation: 2 units above costing 162 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndA
//--------------------------------------------------------------------------------------------------
static void TerranMidGndA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 1, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStockUserData(player);

    TerranTechUp(player, 2);
    Upgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, true, 900, e_mainState_Mid0, e_mainSubState_GndB)) {
        return;
    }

    // next attack should be around 3 units of about 300 resources after 360 seconds
    AIAddStringInt(player, c_TU_Marine, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 1);
    // validation: 4 units above costing 324 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndB
//--------------------------------------------------------------------------------------------------
static void TerranMidGndB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 1, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStockUserData(player);

    TerranTechUp(player, 3);
    Upgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, true, 1260, e_mainState_Late0, e_mainSubState_GndA)) {
        return;
    }

    // next attack should be around 5 units of about 450 resources after 300 seconds
    AIAddStringInt(player, c_TU_Marine, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 1);
    // validation: 5 units above costing 487 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 6000, 500, c_expandDefault);

    AISetStockUserData(player);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 3, c_TU_Medivac );
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    Upgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1260, 300)) {
        return;
    }

    // next attack should be around 5 units of about 450 resources after 300 seconds
    roll = RandomInt(1,6);
    if (roll <= 3) {
        AIAddStringInt(player, c_TU_Marine, 2);
        AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 3);
        // validation: 5 units above costing 436 average resources
    }
    else if (roll <= 5) {
        AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
        // validation: 2 units above costing 474 average resources
    }
    else if (roll <= 6) {
        AIAddStringInt(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
    }
    // validation: 1 units above costing 600 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenAir0
//--------------------------------------------------------------------------------------------------
void TerranOpenAir0 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 8, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 1, c_TB_Refinery );
    AISetStock( player, 1, c_TB_Barracks );
    AISetStock( player, 1, c_TB_Factory );
    AISetStock( player, 1, c_TB_EngineeringBay );
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_MissileTurret );
    AISetStock( player, 1, c_TB_StarportTechLab );

    // next attack should be around 1 units of about 200 resources after 640 seconds
    AISetStock( player, 1, c_TU_Viking_Alias );
    // validation: 1 units above costing 225 average resources

    TerranTechUp(player, 1);
    AirUpgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 640, true, e_mainState_Mid0, e_mainSubState_AirA)) {
	    return;
    }

    // next attack should be around 2 units of about 300 resources after 420 seconds
    AIAddStringInt(player, c_TU_Marine, 1);
    AIAddStringInt(player, c_TU_Viking_Alias, 1);
    // validation: 2 units above costing 275 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirA
//--------------------------------------------------------------------------------------------------
static void TerranMidAirA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 5000, 1500, c_expandDefault);
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_StarportTechLab );

    AISetStockUserData(player);

    AISetStock( player, 3, c_TU_Medivac );

    TerranTechUp(player, 2);
    AirUpgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, true, 1060, e_mainState_Mid0, e_mainSubState_AirB)) {
        return;
    }

    // next attack should be around 3 units of about 450 resources after 360 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    // validation: 2 units above costing 450 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirB
//--------------------------------------------------------------------------------------------------
static void TerranMidAirB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 5000, 1500, c_expandDefault);
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_StarportTechLab );
    AISetStock( player, 3, c_TU_Medivac );

    AISetStockUserData(player);


    TerranTechUp(player, 3);
    AirUpgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, true, 1420, e_mainState_Late0, e_mainSubState_AirA)) {
        return;
    }

    // next attack should be around 5 units of about 675 resources after 300 seconds
    AIAddStringInt(player, c_TU_Marine, 4);
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    // validation: 6 units above costing 650 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    int roll;

    AIClearStock(player);
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 8, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 5000, 1500, c_expandDefault);
    AISetStock( player, 1, c_TB_Starport );
    AISetStock( player, 1, c_TB_StarportTechLab );
    AISetStock( player, 3, c_TU_Medivac );

    AISetStockUserData(player);
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    AirUpgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1420, 300)) {
        return;
    }

    // next attack should be around 5 units of about 675 resources after 300 seconds
    AIAddStringInt(player, c_TU_Marine, 4);
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    // validation: 6 units above costing 650 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMid0
//--------------------------------------------------------------------------------------------------
void TerranMid0 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { TerranMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { TerranMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { TerranMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { TerranMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranLate0
//--------------------------------------------------------------------------------------------------
void TerranLate0 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
