//==================================================================================================
//  Terran Medium Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  Upgrades
//--------------------------------------------------------------------------------------------------
static void Upgrades (int player, int phase) {
    if (phase >= 2) {
        AISetStock( player, 1, c_TR_MarineShield );
        AISetStock( player, 1, c_TR_InfantryWeapons1 );
        AISetStock( player, 1, c_TR_InfantryArmor1 );
        if (phase >= 3) {
            AISetStock( player, 1, c_TR_SiegeTankSiege );
            AISetStock( player, 1, c_TR_MarineStimPack );
            if (AITechCount(player, c_TB_MissileTurret, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_MissileTurretRange );
            }
            AISetStock( player, 1, c_TR_InfantryWeapons2 );
            AISetStock( player, 1, c_TR_InfantryArmor2 );
            AISetStock( player, 1, c_TR_VehicleWeapons1 );
            AISetStock( player, 1, c_TR_VehiclePlating1 );
            if (phase >= 4) {
                if (AITechCount(player, c_TU_Banshee, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_TR_BansheeCloak );
                }
                if (AITechCount(player, c_TU_Hellion, c_techCountInProgressOrBetter) >= 3) {
                    AISetStock( player, 1, c_TR_HellionDamage );
                }
                if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_TR_RavenMissiles );
                }
                if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                    AISetStock( player, 1, c_TR_RavenTimed );
                }
                AISetStock( player, 1, c_TR_VehicleWeapons2 );
                AISetStock( player, 1, c_TR_VehiclePlating2 );
                AISetStock( player, 1, c_TR_ShipWeapons1 );
                AISetStock( player, 1, c_TR_ShipPlating1 );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  AirUpgrades
//--------------------------------------------------------------------------------------------------
static void AirUpgrades (int player, int phase) {
    if (phase >= 2) {
        AISetStock( player, 1, c_TR_ShipWeapons1 );
        AISetStock( player, 1, c_TR_ShipPlating1 );
        if (phase >= 3) {
            if (AITechCount(player, c_TU_Banshee, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_BansheeCloak );
            }
            if (AITechCount(player, c_TB_MissileTurret, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_MissileTurretRange );
            }
            if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_RavenMissiles );
            }
            if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_RavenTimed );
            }
            AISetStock( player, 1, c_TR_ShipWeapons2 );
            AISetStock( player, 1, c_TR_ShipPlating2 );
            if (phase >= 4) {
                AISetStock( player, 1, c_TU_BattlecruiserYamato );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenGnd2
//--------------------------------------------------------------------------------------------------
void TerranOpenGnd2 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 9, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 12, c_TU_SCV );
    AISetStock( player, 1, c_TU_Marine );
    AISetStock( player, 15, c_TU_SCV );
    AISetStock( player, 1, c_TB_Refinery );

    // next attack should be around 7 units of about 650 resources after 420 seconds
    AISetStock( player, 3, c_TU_Marine );
    AISetStock( player, 4, c_TU_Marauder );
    // validation: 7 units above costing 650 average resources

    TerranTechUp(player, 1);
    Upgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 420, false, e_mainState_Mid2, e_mainSubState_GndA)) {
	    return;
    }

    // next attack should be around 11 units of about 1300 resources after 340 seconds
    AIAddStringInt(player, c_TU_Marine, 5);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    // validation: 13 units above costing 1146 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndA
//--------------------------------------------------------------------------------------------------
static void TerranMidGndA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 15, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 3, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStock( player, 2, c_TB_Factory );
    AISetStock( player, 2, c_TB_FactoryTechLab );
    AISetStockUserData(player);

    TerranTechUp(player, 2);
    Upgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, false, 760, e_mainState_Mid2, e_mainSubState_GndB)) {
        return;
    }

    // next attack should be around 17 units of about 1950 resources after 300 seconds
    AIAddStringInt(player, c_TU_Marine, 9);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 2);
    // validation: 17 units above costing 1922 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndB
//--------------------------------------------------------------------------------------------------
static void TerranMidGndB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 15, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 3, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStock( player, 2, c_TB_Factory );
    AISetStock( player, 2, c_TB_FactoryTechLab );
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );
    AISetStockUserData(player);

    TerranTechUp(player, 3);
    Upgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, false, 1060, e_mainState_Late2, e_mainSubState_GndA)) {
        return;
    }

    // next attack should be around 26 units of about 2925 resources after 260 seconds
    AIAddStringInt(player, c_TU_Marine, 12);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    AIAddStringInt(player, c_TU_Banshee, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Thor), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 2);
    // validation: 23 units above costing 2947 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 15, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 8000, 1500, c_expandDefault);

    AISetStock( player, 2, c_TB_Factory );
    AISetStock( player, 2, c_TB_FactoryTechLab );
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );
    AISetStockUserData(player);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 3, c_TU_Medivac );
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    Upgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1060, 260)) {
        return;
    }

    // next attack should be around 26 units of about 2925 resources after 260 seconds
    AIAddStringInt(player, c_TU_Marine, 7);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 3);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 2);
    // validation: 16 units above costing 2934 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenAir2
//--------------------------------------------------------------------------------------------------
void TerranOpenAir2 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 9, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 11, c_TU_SCV );
    AISetStock( player, 1, c_TB_Refinery );
    AISetStock( player, 12, c_TU_SCV );
    AISetStock( player, 2, c_TB_Refinery );
    AISetStock( player, 15, c_TU_SCV );
    AISetStock( player, 1, c_TB_Barracks );
    AISetStock( player, 1, c_TB_Factory );
    AISetStock( player, 1, c_TB_EngineeringBay );
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_MissileTurret );
    AISetStock( player, 2, c_TB_StarportTechLab );

    // next attack should be around 5 units of about 1300 resources after 580 seconds
    AISetStock( player, 3, c_TU_Banshee );
    AISetStock( player, 2, c_TU_Viking_Alias );
    // validation: 5 units above costing 1200 average resources

    TerranTechUp(player, 1);
    AirUpgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 580, false, e_mainState_Mid2, e_mainSubState_AirA)) {
	    return;
    }

    // next attack should be around 8 units of about 1950 resources after 340 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    AIAddStringInt(player, c_TU_Banshee, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 2);
    // validation: 8 units above costing 1898 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirA
//--------------------------------------------------------------------------------------------------
static void TerranMidAirA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 15, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 7000, 2500, c_expandDefault);
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );

    AISetStockUserData(player);

    AISetStock( player, 3, c_TU_Medivac );

    TerranTechUp(player, 2);
    AirUpgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, false, 920, e_mainState_Mid2, e_mainSubState_AirB)) {
        return;
    }

    // next attack should be around 12 units of about 2925 resources after 300 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 4);
    AIAddStringInt(player, c_TU_Banshee, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 4);
    // validation: 12 units above costing 2848 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirB
//--------------------------------------------------------------------------------------------------
static void TerranMidAirB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 15, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 7000, 2500, c_expandDefault);
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );
    AISetStock( player, 3, c_TU_Medivac );

    AISetStockUserData(player);

    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 3);
    AirUpgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, false, 1220, e_mainState_Late2, e_mainSubState_AirA)) {
        return;
    }

    // next attack should be around 18 units of about 4375 resources after 260 seconds
    AIAddStringInt(player, c_TU_Marine, 4);
    AIAddStringInt(player, c_TU_Ghost, 2);
    AIAddStringInt(player, c_TU_Viking_Alias, 3);
    AIAddStringInt(player, c_TU_Banshee, 3);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, c_TU_Thor, 1);
    AIAddStringInt(player, c_TU_Battlecruiser, 1);
    // validation: 18 units above costing 4373 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    int roll;

    AIClearStock(player);
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 15, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 7000, 2500, c_expandDefault);
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );
    AISetStock( player, 3, c_TU_Medivac );

    AISetStockUserData(player);
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 3, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    AirUpgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1220, 260)) {
        return;
    }

    // next attack should be around 18 units of about 4375 resources after 260 seconds
    AIAddStringInt(player, c_TU_Marine, 6);
    AIAddStringInt(player, c_TU_Ghost, 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 5);
    AIAddStringInt(player, c_TU_Thor, 1);
    AIAddStringInt(player, c_TU_Battlecruiser, 3);
    // validation: 16 units above costing 4385 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMid2
//--------------------------------------------------------------------------------------------------
void TerranMid2 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { TerranMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { TerranMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { TerranMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { TerranMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranLate2
//--------------------------------------------------------------------------------------------------
void TerranLate2 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
