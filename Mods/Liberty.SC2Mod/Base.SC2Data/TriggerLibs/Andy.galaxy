//==================================================================================================
//  Terran Melee AI
//==================================================================================================

//==================================================================================================
//  NATIVE INTERFACE
//==================================================================================================

//--------------------------------------------------------------------------------------------------
void AINewUnitAndy (int player, unit u) {
    wave d;

    if (UnitTypeTestFlag(UnitGetType(u), c_unitFlagWorker)) {
        return;
    }

    if (!UnitAbilityExists(u, c_AB_Attack)) {
        return;
    }

    if (UnitGetPropertyFixed(u, c_unitPropMovementSpeed, true) == 0) {
        return;
    }

    d = AIWaveGet(player, c_waveDefend);
    if (d== null) {
        return;
    }

    AIWaveAddUnit(d, u);
}

//--------------------------------------------------------------------------------------------------
unit AIGetScoutAndy (int player, int index, unit prev) {
    if (prev) {
        return prev;
    }

    if (index > 1) {
        return null;
    }

    return AIGrabUnit(player, c_TU_SCV, c_prioScout, null);
}

//--------------------------------------------------------------------------------------------------
void AIWaveManageAndy (int player) {
    wave a;
    wave d;

    d = AIWaveGet(player, c_waveDefend);
    if (d == null) {
        d = AIWaveCreate(AIWaveInfoCreate(), player, AIGetTownLocation(player, c_townMain));
        AIWaveSetType(d, c_waveStateIdle, AIWaveTargetGatherD(player, c_townMain));
        AIWaveSet(player, c_waveDefend, d);
    }
    if (AIWaveUnitCount(d) < 20) {
        return;
    }

    a = AIWaveGet(player, c_waveAttack);
    if (a != null && AIWaveUnitCount(a) > 0) {
        return;
    }

    a = AIWaveCreate(AIWaveInfoCreate(), player, AIGetTownLocation(player, c_townMain));
    AIWaveSetType(a, c_waveStateAttack, AIWaveTargetMelee(player));
    AIWaveSet(player, c_waveAttack, a);

    AIWaveMerge(player, c_waveDefend, c_waveAttack);
}

//--------------------------------------------------------------------------------------------------
void AIWaveThinkAndy (int player, wave w, int type) {
    AIWaveThinkDefault(player, w, type);
}

//--------------------------------------------------------------------------------------------------
void AIMeleeAndy (int player) {
    AIClearStockAll(player);
    
    AISetStock( player, 10, c_TU_SCV );         // 10/11 food
    AISetStock( player, 1, c_TB_SupplyDepot );  // 10/19 food
    AISetStock( player, 12, c_TU_SCV );         // 12/19 food
    AISetStock( player, 1, c_TB_Barracks );
    AISetStock( player, 14, c_TU_SCV );         // 14/19 food
    AISetStock( player, 2, c_TB_Barracks );
    AISetStock( player, 16, c_TU_SCV );         // 16/19 food
    AISetStock( player, 2, c_TB_SupplyDepot );  // 16/27 food
    AISetStock( player, 18, c_TU_SCV );         // 18/27 food
    AISetStock( player, 4, c_TU_Marine );       // 22/27 food
    AISetStock( player, 3, c_TB_SupplyDepot );  // 22/35 food
    AISetStock( player, 3, c_TB_Barracks );
    AISetStock( player, 8, c_TU_Marine );       // 28/35 food
    AISetStock( player, 5, c_TB_SupplyDepot );  // 28/51 food
    AISetStock( player, 30, c_TU_Marine );      // 50/51 food

    AIRestockAll(player);

    AIWaveManageAndy(player);
}
