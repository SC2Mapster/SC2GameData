//==================================================================================================
//  Terran Hard Skirmish AI
//  This is a generated file. Do not edit directly.
//==================================================================================================

//--------------------------------------------------------------------------------------------------
//  Upgrades
//--------------------------------------------------------------------------------------------------
static void Upgrades (int player, int phase) {
    AISetStock( player, 1, c_TR_InfantryWeapons1 );
    AISetStock( player, 1, c_TR_InfantryArmor1 );
    AISetStock( player, 1, c_TR_MarineShield );
    if (phase >= 2) {
        AISetStock( player, 1, c_TR_SiegeTankSiege );
        AISetStock( player, 1, c_TR_MarineStimPack );
        if (AITechCount(player, c_TU_Marauder, c_techCountInProgressOrBetter) >= 3) {
            AISetStock( player, 1, c_TR_MarauderSlow );
        }
        if (AITechCount(player, c_TU_Reaper, c_techCountInProgressOrBetter) >= 3) {
            AISetStock( player, 1, c_TR_ReaperSpeed );
        }
        if (AITechCount(player, c_TB_MissileTurret, c_techCountInProgressOrBetter) >= 1) {
            AISetStock( player, 1, c_TR_MissileTurretRange );
        }
        AISetStock( player, 1, c_TR_InfantryWeapons2 );
        AISetStock( player, 1, c_TR_InfantryArmor2 );
        AISetStock( player, 1, c_TR_VehicleWeapons1 );
        AISetStock( player, 1, c_TR_VehiclePlating1 );
        if (phase >= 3) {
            if (AITechCount(player, c_TU_Banshee, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_BansheeCloak );
            }
            if (AITechCount(player, c_TU_Ghost, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_GhostCloak );
            }
            if (AITechCount(player, c_TU_Hellion, c_techCountInProgressOrBetter) >= 3) {
                AISetStock( player, 1, c_TR_HellionDamage );
            }
            if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_RavenMissiles );
            }
            if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
                AISetStock( player, 1, c_TR_RavenTimed );
            }
            AISetStock( player, 1, c_TR_InfantryWeapons3 );
            AISetStock( player, 1, c_TR_InfantryArmor3 );
            AISetStock( player, 1, c_TR_VehicleWeapons2 );
            AISetStock( player, 1, c_TR_VehiclePlating2 );
            AISetStock( player, 1, c_TR_ShipWeapons1 );
            AISetStock( player, 1, c_TR_ShipPlating1 );
            if (phase >= 4) {
                AISetStock( player, 1, c_TR_ShipWeapons2 );
                AISetStock( player, 1, c_TR_ShipPlating2 );
                AISetStock( player, 1, c_TR_VehicleWeapons3 );
                AISetStock( player, 1, c_TR_VehiclePlating3 );
                AISetStock( player, 1, c_TR_ShipWeapons3 );
                AISetStock( player, 1, c_TR_ShipPlating3 );
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  AirUpgrades
//--------------------------------------------------------------------------------------------------
static void AirUpgrades (int player, int phase) {
    AISetStock( player, 1, c_TR_ShipWeapons1 );
    AISetStock( player, 1, c_TR_ShipPlating1 );
    if (phase >= 2) {
        if (AITechCount(player, c_TU_Banshee, c_techCountInProgressOrBetter) >= 3) {
            AISetStock( player, 1, c_TR_BansheeCloak );
        }
        if (AITechCount(player, c_TB_MissileTurret, c_techCountInProgressOrBetter) >= 1) {
            AISetStock( player, 1, c_TR_MissileTurretRange );
        }
        if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
            AISetStock( player, 1, c_TR_RavenMissiles );
        }
        if (AITechCount(player, c_TU_Raven, c_techCountInProgressOrBetter) >= 1) {
            AISetStock( player, 1, c_TR_RavenTimed );
        }
        AISetStock( player, 1, c_TR_ShipWeapons2 );
        AISetStock( player, 1, c_TR_ShipPlating2 );
        if (phase >= 3) {
            AISetStock( player, 1, c_TU_BattlecruiserYamato );
            AISetStock( player, 1, c_TR_ShipWeapons3 );
            AISetStock( player, 1, c_TR_ShipPlating3 );
            if (phase >= 4) {
            }
        }
    }
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenGnd3
//--------------------------------------------------------------------------------------------------
void TerranOpenGnd3 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 9, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 12, c_TU_SCV );
    AISetStock( player, 2, c_TB_Barracks );
    AISetStock( player, 20, c_TU_SCV );
    AISetStock( player, 1, c_TB_Refinery );
    AISetStock( player, 2, c_TB_BarracksTechLab );

    // next attack should be around 10 units of about 925 resources after 390 seconds
    AISetStock( player, 6, c_TU_Marine );
    AISetStock( player, 5, c_TU_Marauder );
    // validation: 11 units above costing 925 average resources

    TerranTechUp(player, 1);
    Upgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 390, false, e_mainState_Mid3, e_mainSubState_GndA)) {
	    return;
    }

    // next attack should be around 15 units of about 1850 resources after 300 seconds
    AIAddStringInt(player, c_TU_Marine, 6);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 4);
    // validation: 14 units above costing 1896 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndA
//--------------------------------------------------------------------------------------------------
static void TerranMidGndA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 20, c_stockAlways);
    if (AISawCloakedUnit(player)) {
        AISetStock( player, 4, c_TB_MissileTurret );
        AISetStock( player, 1, c_TB_OrbitalCommand );
    }
    AISetStock( player, 2, c_TB_Factory );
    AISetStock( player, 2, c_TB_FactoryTechLab );
    AISetStockUserData(player);

    TerranTechUp(player, 2);
    Upgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, false, 690, e_mainState_Mid3, e_mainSubState_GndB)) {
        return;
    }

    // next attack should be around 23 units of about 2775 resources after 270 seconds
    AIAddStringInt(player, c_TU_Marine, 12);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 4);
    AIAddStringInt(player, c_TU_Viking_Alias, 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Thor), 1);
    // validation: 22 units above costing 2796 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMidGndB
//--------------------------------------------------------------------------------------------------
static void TerranMidGndB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 20, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 9000, 2000, c_expandDefault);
    AISetStock( player, 2, c_TB_Factory );
    AISetStock( player, 2, c_TB_FactoryTechLab );
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );
    AISetStockUserData(player);

    TerranTechUp(player, 3);
    Upgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, false, 960, e_mainState_Late3, e_mainSubState_GndA)) {
        return;
    }

    // next attack should be around 35 units of about 4175 resources after 240 seconds
    AIAddStringInt(player, c_TU_Marine, 18);
    AIAddStringInt(player, c_TU_Viking_Alias, 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Thor), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Thor), 1);
    // validation: 32 units above costing 4170 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateGnd
//--------------------------------------------------------------------------------------------------
static void LateGnd (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 26, c_stockAlways);
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 9000, 2000, c_expandDefault);

    AISetStock( player, 2, c_TB_Factory );
    AISetStock( player, 2, c_TB_FactoryTechLab );
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_StarportTechLab );
    AISetStockUserData(player);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 4, c_TU_Medivac );
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 4, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    Upgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 960, 240)) {
        return;
    }

    // next attack should be around 35 units of about 4175 resources after 240 seconds
    AIAddStringInt(player, c_TU_Marine, 8);
    AIAddStringInt(player, AIPickFrom2(c_TU_Marauder, c_TU_Hellion), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Battlecruiser, c_TU_Thor), 1);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Ghost, c_TU_SiegeTank), 2);
    // validation: 22 units above costing 4144 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranOpenAir3
//--------------------------------------------------------------------------------------------------
void TerranOpenAir3 (int player) {
    int roll;

    AIClearStock(player);

    AISetStock( player, 1, c_TB_CommandCenter_Alias );
    AISetStock( player, 9, c_TU_SCV );
    AISetStockFarms( player, c_TB_SupplyDepot, c_stockNormalFarms);
    AISetStock( player, 11, c_TU_SCV );
    AISetStock( player, 1, c_TB_Refinery );
    AISetStock( player, 12, c_TU_SCV );
    AISetStock( player, 2, c_TB_Refinery );
    AISetStock( player, 15, c_TU_SCV );
    AISetStock( player, 1, c_TB_Barracks );
    AISetStock( player, 20, c_TU_SCV );
    AISetStock( player, 1, c_TB_Factory );
    AISetStock( player, 1, c_TB_EngineeringBay );
    AISetStock( player, 2, c_TB_Starport );
    AISetStock( player, 2, c_TB_MissileTurret );
    AISetStock( player, 2, c_TB_StarportTechLab );

    // next attack should be around 6 units of about 1500 resources after 550 seconds
    AISetStock( player, 4, c_TU_Banshee );
    AISetStock( player, 2, c_TU_Viking_Alias );
    // validation: 6 units above costing 1450 average resources

    AISetStock( player, 1, c_TB_OrbitalCommand );

    TerranTechUp(player, 1);
    AirUpgrades(player, 1);

    if (AIEnableStockOpen(player, c_TU_SCV, 550, false, e_mainState_Mid3, e_mainSubState_AirA)) {
	    return;
    }

    // next attack should be around 10 units of about 2400 resources after 300 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 3);
    AIAddStringInt(player, c_TU_Banshee, 3);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Banshee, c_TU_Viking_Alias), 2);
    // validation: 10 units above costing 2373 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirA
//--------------------------------------------------------------------------------------------------
static void TerranMidAirA (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 20, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 8000, 3000, c_expandDefault);
    AISetStock( player, 3, c_TB_Starport );
    AISetStock( player, 3, c_TB_StarportTechLab );

    AISetStockUserData(player);

    AISetStock( player, 4, c_TU_Medivac );
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 4, c_TB_MissileTurret );

    TerranTechUp(player, 2);
    AirUpgrades(player, 2);

    if (AIEnableStockMidA(player, c_TU_SCV, 4, false, 850, e_mainState_Mid3, e_mainSubState_AirB)) {
        return;
    }

    // next attack should be around 15 units of about 3900 resources after 270 seconds
    AIAddStringInt(player, c_TU_Viking_Alias, 4);
    AIAddStringInt(player, c_TU_Banshee, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 4);
    // validation: 16 units above costing 3796 average resources

    AISetFlag(player, e_flagsScouting, true);
}

//--------------------------------------------------------------------------------------------------
//  TerranMidAirB
//--------------------------------------------------------------------------------------------------
static void TerranMidAirB (int player) {
    int roll;

    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 20, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 8000, 3000, c_expandDefault);
    AISetStock( player, 3, c_TB_Starport );
    AISetStock( player, 3, c_TB_StarportTechLab );
    AISetStock( player, 4, c_TU_Medivac );

    AISetStockUserData(player);

    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 4, c_TB_MissileTurret );

    TerranTechUp(player, 3);
    AirUpgrades(player, 3);

    if (AIEnableStockMidB(player, c_TU_SCV, 4, false, 1120, e_mainState_Late3, e_mainSubState_AirA)) {
        return;
    }

    // next attack should be around 25 units of about 6100 resources after 240 seconds
    AIAddStringInt(player, c_TU_Marine, 5);
    AIAddStringInt(player, c_TU_Ghost, 3);
    AIAddStringInt(player, c_TU_Viking_Alias, 4);
    AIAddStringInt(player, c_TU_Banshee, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 2);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 3);
    AIAddStringInt(player, c_TU_Thor, 1);
    AIAddStringInt(player, c_TU_Battlecruiser, 2);
    // validation: 24 units above costing 6135 average resources
}

//--------------------------------------------------------------------------------------------------
//  LateAir
//--------------------------------------------------------------------------------------------------
static void LateAir (int player) {
    int roll;

    AIClearStock(player);
    AIClearStock(player);

    AIDefaultEconomy(player, c_TB_CommandCenter_Alias, c_TB_Refinery, c_TB_SupplyDepot, c_TU_SCV, 26, c_stockAlways);
    AISetStock( player, 1, c_TB_OrbitalCommand );
    AISetStock( player, 1, c_TU_Medivac );
    AIDefaultExpansion(player, c_TB_CommandCenter_Alias, 8000, 3000, c_expandDefault);
    AISetStock( player, 3, c_TB_Starport );
    AISetStock( player, 3, c_TB_StarportTechLab );
    AISetStock( player, 4, c_TU_Medivac );

    AISetStockUserData(player);
    AISetStock( player, 1, c_TU_Raven );
    AISetStock( player, 4, c_TB_MissileTurret );

    TerranTechUp(player, 4);
    AirUpgrades(player, 4);

    if (AIEnableStockLate(player, c_TU_SCV, 4, 1120, 240)) {
        return;
    }

    // next attack should be around 25 units of about 6100 resources after 240 seconds
    AIAddStringInt(player, c_TU_Marine, 8);
    AIAddStringInt(player, c_TU_Ghost, 4);
    AIAddStringInt(player, AIPickFrom2(c_TU_Viking_Alias, c_TU_Banshee), 8);
    AIAddStringInt(player, c_TU_Thor, 1);
    AIAddStringInt(player, c_TU_Battlecruiser, 3);
    // validation: 24 units above costing 6096 average resources
}

//--------------------------------------------------------------------------------------------------
//  TerranMid3
//--------------------------------------------------------------------------------------------------
void TerranMid3 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { TerranMidGndA(player);  }
    else if (mainSubState == e_mainSubState_GndB)     { TerranMidGndB(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { TerranMidAirA(player);  }
    else if (mainSubState == e_mainSubState_AirB)     { TerranMidAirB(player);  }
    else { ErrorMeleeScript(player, "Invalid Mid mainSubState"); }
}

//--------------------------------------------------------------------------------------------------
//  TerranLate3
//--------------------------------------------------------------------------------------------------
void TerranLate3 (int player) {
    int mainSubState = AIState(player, e_mainSubState);
    if (mainSubState == e_mainSubState_GndA)          { LateGnd(player);  }
    else if (mainSubState == e_mainSubState_AirA)     { LateAir(player);  }
    else { ErrorMeleeScript(player, "Invalid Late mainSubState"); }
}
